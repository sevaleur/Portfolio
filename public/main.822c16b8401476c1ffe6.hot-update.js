/*! For license information please see main.822c16b8401476c1ffe6.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateportfolio("main",{"./app/classes/Page.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>d});var i=s("./node_modules/gsap/index.js"),o=s("./node_modules/lodash/each.js"),n=s.n(o),r=s("./node_modules/lodash/map.js"),l=s.n(r),h=s("./node_modules/prefix/index.js"),c=s.n(h),a=s("./app/classes/AsyncLoad.js");class d{constructor({element:e,elements:t,id:s,device:i}){this.selector=e,this.selectorChildren={...t,images:"[data-src]"},this.device=i,this.id=s,this.transform_prefix=c()("transform")}create(){this.element=document.querySelector(this.selector),this.elements={},this.scroll={current:0,target:0,last:0,limit:0},this.touch={y:{start:0,distance:0,end:0}},this.coord={x:window.innerWidth/2,y:window.innerHeight/2,vX:0,vY:0,pX:0,pY:0},n()(this.selectorChildren,((e,t)=>{e instanceof window.HTMLElement||e instanceof window.NodeList||Array.isArray(e)?this.elements[t]=e:(this.elements[t]=document.querySelectorAll(e),0===this.elements[t].length?this.elements[t]=null:1===this.elements[t].length&&(this.elements[t]=document.querySelector(e)))})),this.preloadImages()}createAnimations(e=!1){e&&(this.animations=[])}preloadImages(){this.images=l()(this.elements.images,(e=>new a.default({element:e})))}show(){return new Promise((e=>{this.animateIn=i.default.timeline(),this.animateIn.fromTo(this.element,{autoAlpha:0},{autoAlpha:1,onComplete:e}),this.animateIn.call((()=>{this.addEventListeners(),e()}))}))}hide(e=!1){if(!e)return new Promise((e=>{this.removeEventListeners(),this.animateOut=i.default.timeline(),this.animateOut.to(this.element,{autoAlpha:0,onComplete:e})}));this.removeEventListeners()}onTouchDown(e){this.isDown=!0,this.touch.y.start=e.touches?e.touches[0].clientY:e.clientY,this.scroll.position=this.scroll.current}onTouchMove(e){if(!this.isDown)return;const t=e.touches?e.touches[0].clientY:e.clientY;this.touch.y.end=t;const s=this.touch.y.start-this.touch.y.end;this.scroll.target=this.scroll.position+1.5*s}onTouchUp(e){this.isDown=!1}onWheel({pixelY:e}){this.scroll.target+=e}onMove({clientX:e,clientY:t}){this.coord.x=e,this.coord.y=t,this.coord.vX=this.coord.x-this.coord.pX,this.coord.vY=this.coord.y-this.coord.pY,this.coord.pX=this.coord.x,this.coord.pY=this.coord.y}onResize(){this.elements.wrapper&&(this.scroll.limit=this.elements.wrapper.clientHeight-window.innerHeight),n()(this.animations,(e=>e.onResize()))}update(){this.scroll.target=i.default.utils.clamp(0,this.scroll.limit,this.scroll.target),this.scroll.current=i.default.utils.interpolate(this.scroll.current,this.scroll.target,.1),this.scroll.current<.01&&(this.scroll.current=0),console.log(this.elements.wrapper),this.elements.wrapper&&(this.elements.wrapper.style[this.transform_prefix]=`translateY(-${this.scroll.current}px)`)}addEventListeners(){}removeEventListeners(){}}}},(function(e){e.h=()=>"c8a28552b69c6b983039"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,